{"version":3,"file":"sourceNodes.js","names":["sourceNodes","configOptions","actions","createNodeId","createContentDigest","createNode","endpoints","clientId","secret","storeHash","accessToken","hostname","preview","errMessage","console","log","FG_YELLOW","bigCommerce","BigCommerce","responseType","Object","keys","length","FG_GREEN","Promise","all","entries","map","nodeName","endpoint","get","then","res","resData","Array","isArray","data","datum","id","bigcommerce_id","parent","children","internal","type","content","handleConversionObjectToString","contentDigest","catch","err","Error","finally","exitMessage","error","FG_RED"],"sources":["../src/gatsby/sourceNodes.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { FG_GREEN, FG_RED, FG_YELLOW } from \"../constants\";\nimport BigCommerce from \"../utils/bigcommerce\";\nimport { handleConversionObjectToString } from \"../utils/convertValues\";\n// const { createProxyMiddleware } = require(\"http-proxy-middleware\");\n\nexport const sourceNodes = async ({ actions, createNodeId, createContentDigest }, configOptions) => {\n\tconst { createNode } = actions;\n\tconst { endpoints = null, clientId = null, secret = null, storeHash = null, accessToken = null, hostname = null, preview = false } = configOptions;\n\n\tlet errMessage = \"\";\n\n\t// Send log message when checking for required options\n\tconsole.log(FG_YELLOW, \"\\nChecking BigCommerce plugin options... \");\n\n\tif (endpoints !== null && clientId !== null && secret !== null && storeHash !== null && accessToken !== null) {\n\t\t// Init new `BigCommerce` instance\n\t\tconst bigCommerce = new BigCommerce({\n\t\t\tclientId: clientId,\n\t\t\taccessToken: accessToken,\n\t\t\tsecret: secret,\n\t\t\tstoreHash: storeHash,\n\t\t\tresponseType: \"json\"\n\t\t});\n\n\t\t// Handle fetching and creating nodes for a single or multiple endpoints\n\t\tif (typeof endpoints === \"object\" && Object.keys(endpoints).length > 0) {\n\t\t\t// Send log message when fetching data\n\t\t\tconsole.log(FG_GREEN, \"\\nValid plugin options found. Proceeding with plugin initialization...\");\n\t\t\tconsole.log(FG_YELLOW, \"\\nRequesting endpoint data...\\n\");\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.entries(endpoints).map(([nodeName, endpoint]) => {\n\t\t\t\t\treturn bigCommerce.get(endpoint).then((res) => {\n\t\t\t\t\t\t// If the data object is not on the response, it could be `v2` which returns an array as the root, so use that as a fallback\n\t\t\t\t\t\tconst resData = \"data\" in res && Array.isArray(res.data) ? res.data : res;\n\n\t\t\t\t\t\t// Handle generating nodes\n\t\t\t\t\t\treturn \"data\" in res && Array.isArray(res.data)\n\t\t\t\t\t\t\t? resData.map((datum) =>\n\t\t\t\t\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t\t\t\t\t...datum,\n\t\t\t\t\t\t\t\t\t\tid: createNodeId(`${datum.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\t\tbigcommerce_id: datum.id,\n\t\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(datum),\n\t\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(datum)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: Array.isArray(res)\n\t\t\t\t\t\t\t? res.map((datum) =>\n\t\t\t\t\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t\t\t\t\t...datum,\n\t\t\t\t\t\t\t\t\t\tid: createNodeId(`${datum.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\t\tbigcommerce_id: datum.id,\n\t\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(datum),\n\t\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(datum)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: createNode({\n\t\t\t\t\t\t\t\t\t...resData,\n\t\t\t\t\t\t\t\t\tid: createNodeId(`${resData.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(resData),\n\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(resData)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  });\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Send log message when all endpoints have been fetched\n\t\t\t\t\tconsole.log(FG_GREEN, \"\\nAll endpoint data have been fetched successfully.\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// Send log message when an error occurs\n\t\t\t\t\terrMessage = new Error(`An error occurred while fetching endpoint data. ${err}`);\n\t\t\t\t})\n\t\t\t\t.finally(() =>\n\t\t\t\t\t// Send log message when fetching data is complete\n\t\t\t\t\tconsole.log(FG_YELLOW, \"\\nRequesting endpoint data complete.\\n\")\n\t\t\t\t);\n\t\t} else {\n\t\t\terrMessage = new Error(\"The `endpoints` object is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// [WIP] Check if the store is in preview mode, and if so, return error\n\t\tif (preview) {\n\t\t\terrMessage = new Error(\"The `preview` option is not currently supported. A fix is in the works.\");\n\n\t\t\t// if (IS_DEV) {\n\t\t\t// \t// Make a `POST` request to the BigCommerce API to subscribe to its webhook\n\t\t\t// \tconst webhookEndpoint = \"v3/hooks\";\n\t\t\t// \tconst body = handleConversionObjectToString({\n\t\t\t// \t\tscope: \"store/product/updated\",\n\t\t\t// \t\tis_active: true,\n\t\t\t// \t\tdestination: `${hostname}/___BCPreview`\n\t\t\t// \t});\n\n\t\t\t// \tbigCommerce.post(webhookEndpoint, body);\n\n\t\t\t// \tconst server = micro(async (req, res) => {\n\t\t\t// \t\tconst request = await micro.json(req);\n\t\t\t// \t\tconst productId = request.data.id;\n\n\t\t\t// \t\t// Webhooks don't send any data, so we need to make a request to the BigCommerce API to get the product data\n\t\t\t// \t\tconst newProduct = await bigCommerce.get(`/catalog/products/${productId}`);\n\t\t\t// \t\tconst nodeToUpdate = newProduct.data;\n\n\t\t\t// \t\tif (nodeToUpdate.id) {\n\t\t\t// \t\t\tcreateNode({\n\t\t\t// \t\t\t\t...nodeToUpdate,\n\t\t\t// \t\t\t\tid: createNodeId(`${nodeToUpdate?.id ?? `BigCommerceNode`}`),\n\t\t\t// \t\t\t\tparent: null,\n\t\t\t// \t\t\t\tchildren: [],\n\t\t\t// \t\t\t\tinternal: {\n\t\t\t// \t\t\t\t\ttype: `BigCommerceNode`,\n\t\t\t// \t\t\t\t\tcontentDigest: createContentDigest(nodeToUpdate)\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t});\n\n\t\t\t// \t\t\tconsole.log(FG_YELLOW, `\\nUpdated node: ${nodeToUpdate.id}`);\n\t\t\t// \t\t}\n\n\t\t\t// \t\t// Send a response back to the BigCommerce API\n\t\t\t// \t\tres.end(\"ok\");\n\t\t\t// \t});\n\n\t\t\t// \tserver.listen(8033, console.log(FG_YELLOW, `Now listening to changes for live preview at route /___BCPreview\\n`));\n\t\t\t// }\n\t\t}\n\t} else {\n\t\t// If `endpoints` is null, throw an error\n\t\tif (endpoints == null) {\n\t\t\terrMessage = new Error(\"The `endpoints` are required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `clientId` is null, throw an error\n\t\tif (clientId == null) {\n\t\t\terrMessage = new Error(\"The `clientId` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `secret` is null, throw an error\n\t\tif (secret == null) {\n\t\t\terrMessage = new Error(\"The `secret` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `storeHash` is null, throw an error\n\t\tif (storeHash == null) {\n\t\t\terrMessage = new Error(\"The `storeHash` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `accessToken` is null, throw an error\n\t\tif (accessToken == null) {\n\t\t\terrMessage = new Error(\"The `accessToken` is required to make any call to the BigCommerce API\");\n\t\t}\n\t}\n\n\tif (errMessage !== \"\") {\n\t\tconst exitMessage = \"\\nPlugin terminated with errors...\\n\";\n\n\t\tconsole.error(FG_RED, exitMessage);\n\n\t\tthrow errMessage;\n\t}\n};\n\n// exports.onCreateDevServer = ({ app }) => {\n// \tapp.use(\n// \t\t\"/___BCPreview/\",\n// \t\tcreateProxyMiddleware({\n// \t\t\ttarget: `http://localhost:8033`,\n// \t\t\tsecure: false\n// \t\t})\n// \t);\n// };\n"],"mappings":"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"}