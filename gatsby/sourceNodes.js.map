{"version":3,"sources":["../src/gatsby/sourceNodes.js"],"names":["exports","sourceNodes","configOptions","actions","createNodeId","createContentDigest","createNode","endpoints","clientId","secret","storeHash","accessToken","siteUrl","preview","logLevel","agent","responseType","headers","sanitizedSiteUrl","sanitizedLogLevel","sanitizeResponseType","logLevels","levels","error","debug","warn","info","colors","combine","format","timestamp","colorize","simple","logger","level","transports","Console","errMessage","BC","BigCommerce","Object","keys","length","Promise","all","entries","map","nodeName","endpoint","get","then","res","resData","Array","isArray","data","datum","id","bigcommerce_id","parent","children","internal","type","content","contentDigest","catch","err","Error","finally","IS_DEV","webhookEndpoint","body","scope","is_active","destination","post","server","req","micro","json","request","productId","newProduct","nodeToUpdate","end","listen","exitMessage","onCreateDevServer","app","use","target","secure"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n\"use strict\";\n\nimport { createProxyMiddleware } from \"http-proxy-middleware\";\nimport micro from \"micro\";\nimport { addColors, createLogger, format, transports } from \"winston\";\nimport { IS_DEV } from \"../constants\";\nimport BigCommerce from \"../utils/bigcommerce\";\nimport { handleConversionObjectToString, handleConversionStringToLowercase } from \"../utils/convertValues\";\n\nexports.sourceNodes = async ({ actions, createNodeId, createContentDigest }, configOptions) => {\n\tconst { createNode } = actions;\n\tconst { endpoints = null, clientId = null, secret = null, storeHash = null, accessToken = null, siteUrl = null, preview = false, logLevel = \"info\", agent = null, responseType = \"json\", headers = {} } = configOptions;\n\n\tconst sanitizedSiteUrl = handleConversionStringToLowercase(siteUrl);\n\tconst sanitizedLogLevel = handleConversionStringToLowercase(logLevel);\n\tconst sanitizeResponseType = handleConversionStringToLowercase(responseType);\n\n\t// Add custom log levels\n\tconst logLevels = {\n\t\tlevels: {\n\t\t\terror: 0,\n\t\t\tdebug: 1,\n\t\t\twarn: 2,\n\t\t\tinfo: 4\n\t\t},\n\t\tcolors: {\n\t\t\terror: \"bold red\",\n\t\t\tdebug: \"bold blue\",\n\t\t\twarn: \"bold yellow\",\n\t\t\tinfo: \"bold green\"\n\t\t}\n\t};\n\n\tconst { combine, timestamp, colorize, simple } = format;\n\n\t// Add console colors\n\taddColors(logLevels.colors);\n\n\t// Init `winston` logger\n\tconst logger = createLogger({\n\t\tlevel: sanitizedLogLevel,\n\t\tlevels: logLevels.levels,\n\t\tformat: combine(colorize(), simple(), timestamp()),\n\t\ttransports: [new transports.Console()]\n\t});\n\n\t// Custom variables\n\tlet errMessage = \"\";\n\n\t// Send log message when checking for required options\n\tlogger.info(\"Checking BigCommerce plugin options... \");\n\n\tif (endpoints !== null && clientId !== null && secret !== null && storeHash !== null && accessToken !== null) {\n\t\t// Init new `BigCommerce` instance\n\t\tconst BC = new BigCommerce({\n\t\t\tclientId: clientId,\n\t\t\taccessToken: accessToken,\n\t\t\tsecret: secret,\n\t\t\tstoreHash: storeHash,\n\t\t\tresponseType: sanitizeResponseType,\n\t\t\tlogger: logger,\n\t\t\tagent: agent,\n\t\t\theaders: headers\n\t\t});\n\n\t\t// Handle fetching and creating nodes for a single or multiple endpoints\n\t\tif (endpoints && typeof endpoints === \"object\" && Object.keys(endpoints).length > 0) {\n\t\t\t// Send log message when fetching data\n\t\t\tlogger.info(\"Valid plugin options found. Proceeding with plugin initialization...\");\n\t\t\tlogger.info(\"Requesting endpoint data...\");\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.entries(endpoints).map(([nodeName, endpoint]) => {\n\t\t\t\t\treturn BC.get(endpoint).then((res) => {\n\t\t\t\t\t\t// If the data object is not on the response, it could be `v2` which returns an array as the root, so use that as a fallback\n\t\t\t\t\t\tconst resData = \"data\" in res && Array.isArray(res.data) ? res.data : res;\n\n\t\t\t\t\t\t// Handle generating nodes\n\t\t\t\t\t\treturn \"data\" in res && Array.isArray(res.data)\n\t\t\t\t\t\t\t? resData.map((datum) =>\n\t\t\t\t\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t\t\t\t\t...datum,\n\t\t\t\t\t\t\t\t\t\tid: createNodeId(`${datum.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\t\tbigcommerce_id: datum.id,\n\t\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(datum),\n\t\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(datum)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: Array.isArray(res)\n\t\t\t\t\t\t\t? res.map((datum) =>\n\t\t\t\t\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t\t\t\t\t...datum,\n\t\t\t\t\t\t\t\t\t\tid: createNodeId(`${datum.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\t\tbigcommerce_id: datum.id,\n\t\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(datum),\n\t\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(datum)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: createNode({\n\t\t\t\t\t\t\t\t\t...resData,\n\t\t\t\t\t\t\t\t\tid: createNodeId(`${resData.id + \"-\" + nodeName}`),\n\t\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\t\ttype: nodeName,\n\t\t\t\t\t\t\t\t\t\tcontent: handleConversionObjectToString(resData),\n\t\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(resData)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  });\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Send log message when all endpoints have been fetched\n\t\t\t\t\tlogger.info(\"All endpoint data have been fetched successfully.\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// Send log message when an error occurs\n\t\t\t\t\terrMessage = new Error(`An error occurred while fetching endpoint data. ${err}`);\n\t\t\t\t})\n\t\t\t\t.finally(() =>\n\t\t\t\t\t// Send log message when fetching data is complete\n\t\t\t\t\tlogger.info(\"Requesting endpoint data complete.\")\n\t\t\t\t);\n\t\t} else {\n\t\t\terrMessage = new Error(\"The `endpoints` object is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\tif (IS_DEV && preview && sanitizedSiteUrl !== null) {\n\t\t\t// Make a `POST` request to the BigCommerce API to subscribe to its webhook\n\t\t\tconst webhookEndpoint = \"/v3/hooks\";\n\t\t\tconst body = {\n\t\t\t\tscope: \"store/product/updated\",\n\t\t\t\tis_active: true,\n\t\t\t\tdestination: `${sanitizedSiteUrl}/__BCPreview`\n\t\t\t};\n\n\t\t\tawait BC.get(webhookEndpoint).then((res) => {\n\t\t\t\tif (\"data\" in res && Object.keys(res.data).length > 0) {\n\t\t\t\t\treturn res.data;\n\t\t\t\t} else return (async () => await BC.post(webhookEndpoint, body).then((res) => res))();\n\t\t\t});\n\n\t\t\tconst server = micro(async (req, res) => {\n\t\t\t\tconst request = await micro.json(req);\n\t\t\t\tconst productId = request.data.id;\n\n\t\t\t\t// Webhooks don't send any data, so we need to make a request to the BigCommerce API to get the product data\n\t\t\t\tconst newProduct = await BC.get(`/catalog/products/${productId}`);\n\t\t\t\tconst nodeToUpdate = newProduct.data;\n\n\t\t\t\tif (nodeToUpdate.id) {\n\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t...nodeToUpdate,\n\t\t\t\t\t\tid: createNodeId(`${nodeToUpdate?.id ?? `BigCommerceNode`}`),\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\ttype: `BigCommerceNode`,\n\t\t\t\t\t\t\tcontentDigest: createContentDigest(nodeToUpdate)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tlogger.info(`Updated node: ${nodeToUpdate.id}`);\n\t\t\t\t}\n\n\t\t\t\t// Send a response back to the BigCommerce API\n\t\t\t\tres.end(\"ok\");\n\t\t\t});\n\n\t\t\tserver.listen(8033, logger.info(`Now listening to changes for live preview at /__BCPreview`));\n\t\t}\n\t} else {\n\t\t// If `endpoints` is null, throw an error\n\t\tif (endpoints == null) {\n\t\t\terrMessage = new Error(\"The `endpoints` are required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `clientId` is null, throw an error\n\t\tif (clientId == null) {\n\t\t\terrMessage = new Error(\"The `clientId` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `secret` is null, throw an error\n\t\tif (secret == null) {\n\t\t\terrMessage = new Error(\"The `secret` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `storeHash` is null, throw an error\n\t\tif (storeHash == null) {\n\t\t\terrMessage = new Error(\"The `storeHash` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `accessToken` is null, throw an error\n\t\tif (accessToken == null) {\n\t\t\terrMessage = new Error(\"The `accessToken` is required to make any call to the BigCommerce API\");\n\t\t}\n\t}\n\n\tif (errMessage !== \"\") {\n\t\tconst exitMessage = \"Plugin terminated with errors...\";\n\n\t\tlogger.error(`${exitMessage}`);\n\n\t\tthrow errMessage;\n\t}\n};\n\nexports.onCreateDevServer = ({ app }) => {\n\tapp.use(\n\t\t\"/__BCPreview/\",\n\t\tcreateProxyMiddleware({\n\t\t\ttarget: `http://localhost:8033`,\n\t\t\tsecure: false\n\t\t})\n\t);\n};\n"],"file":"sourceNodes.js"}