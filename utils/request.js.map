{"version":3,"file":"request.js","names":["handleBodyResponse","res","body","resolve","reject","logger","test","headers","trim","error","JSONObject","handleConversionStringToObject","JSONError","JSONErrors","errors","err","Error","handleConversionObjectToString","responseBody","Request","hostname","agent","errMessage","protocol","run","method","path","data","dataString","options","port","handleConversionStringToUppercase","gzip","Object","assign","Buffer","from","length","Promise","req","https","request","info","toUpperCase","HTTPS_PROTOCOL","Math","round","statusCode","debug","statusMessage","xRetryAfterHeader","setTimeout","then","catch","on","chunk","zlib","gunzip","toString","write","end"],"sources":["../src/utils/request.js"],"sourcesContent":["/* eslint-disable no-undef */\n\"use strict\";\n\nimport https from \"https\";\nimport zlib from \"zlib\";\nimport { HTTPS_PROTOCOL } from \"../constants\";\nimport { handleConversionObjectToString, handleConversionStringToObject, handleConversionStringToUppercase } from \"./convertValues\";\n\n// Handle parsing the response from the BigCommerce API\nfunction handleBodyResponse(res, body, resolve, reject, logger) {\n\ttry {\n\t\tif (!/application\\/json/.test(res.headers[\"content-type\"]) || body.trim() === \"\") {\n\t\t\tlogger.error(\"The response body from the BigCommerce API is not in JSON format.\");\n\n\t\t\treturn resolve(body);\n\t\t}\n\n\t\t// Convert string to object\n\t\tconst JSONObject = handleConversionStringToObject(body);\n\n\t\t// Check for errors in the body response, if there is found, reject the promise\n\t\tconst JSONError = JSONObject?.error ?? null;\n\t\tconst JSONErrors = JSONObject?.errors ?? null;\n\n\t\tif (JSONError !== null || JSONErrors !== null) {\n\t\t\tconst err = new Error(JSONError || handleConversionObjectToString(JSONErrors));\n\n\t\t\treturn reject(err);\n\t\t}\n\n\t\t// Return the body response as a JSON object\n\t\treturn resolve(JSONObject);\n\t} catch (err) {\n\t\terr.responseBody = body;\n\n\t\treturn reject(err);\n\t}\n}\nclass Request {\n\tconstructor(hostname = null, { headers = {}, agent = null, logger = null } = {}) {\n\t\thostname == null && headers == null\n\t\t\t? (() => {\n\t\t\t\t\tconst errMessage = new Error(\"The hostname and headers are required to make the call to the server.\");\n\n\t\t\t\t\tthrow errMessage;\n\t\t\t  })()\n\t\t\t: null;\n\n\t\tlogger == null\n\t\t\t? (() => {\n\t\t\t\t\tconst errMessage = new Error(\"The logger is required to make the call to the server. Something is wrong.\");\n\n\t\t\t\t\tthrow errMessage;\n\t\t\t  })()\n\t\t\t: null;\n\n\t\tthis.hostname = hostname;\n\t\tthis.headers = headers;\n\t\tthis.agent = agent;\n\t\tthis.logger = logger;\n\t\tthis.protocol = \"https:\";\n\t}\n\n\t// Handle running plugin\n\trun(method, path, data = null) {\n\t\tconst dataString = data !== null ? handleConversionObjectToString(data) : null;\n\n\t\tconst options = {\n\t\t\tpath: path,\n\t\t\tprotocol: this.protocol,\n\t\t\thostname: this.hostname,\n\t\t\tport: 443,\n\t\t\tmethod: handleConversionStringToUppercase(method),\n\t\t\tgzip: true,\n\t\t\theaders: Object.assign(\n\t\t\t\t{\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tthis.headers\n\t\t\t)\n\t\t};\n\n\t\tif (this.agent !== null) {\n\t\t\toptions.agent = this.agent;\n\t\t}\n\n\t\tif (dataString !== null) {\n\t\t\toptions.headers[\"Content-Length\"] = Buffer.from(dataString).length;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst req = https.request(options, (res) => {\n\t\t\t\t// Send log message when requesting data\n\t\t\t\tthis.logger.info(`${\"[\" + method.toUpperCase() + \"] \" + HTTPS_PROTOCOL + this.hostname + path}`);\n\n\t\t\t\tif (Math.round(res.statusCode / 100) === 2) {\n\t\t\t\t\tthis.logger.debug(`${res.statusCode + \" \" + res.statusMessage}`);\n\t\t\t\t} else if (Math.round(res.statusCode / 100) === 4 || Math.round(res.statusCode / 100) === 5) {\n\t\t\t\t\tthis.logger.debug(`${res.statusCode + \" \" + res.statusMessage}`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logger.debug(`${res.statusCode + \" \" + res.statusMessage}`);\n\t\t\t\t}\n\n\t\t\t\tlet body = \"\";\n\n\t\t\t\t// Handle API rate limit\n\t\t\t\tconst statusCode = res.statusCode;\n\n\t\t\t\tif (Math.round(statusCode / 100) === 4) {\n\t\t\t\t\tif (statusCode === 429) {\n\t\t\t\t\t\tconst xRetryAfterHeader = res?.headers?.[\"x-retry-after\"] ?? null;\n\n\t\t\t\t\t\tif (xRetryAfterHeader !== null) {\n\t\t\t\t\t\t\tthis.logger.info(`The BigCommerce API rate limit has been reached. Please wait ${xRetryAfterHeader} seconds before making another request.`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn setTimeout(() => {\n\t\t\t\t\t\t\t// Send log message when restarting request\n\t\t\t\t\t\t\tthis.logger.info(\"Restarting request...\");\n\n\t\t\t\t\t\t\t// Send log message when restarting request\n\t\t\t\t\t\t\tthis.logger.info(`${\"[\" + method.toUpperCase() + \"] \" + HTTPS_PROTOCOL + this.hostname + path}`);\n\n\t\t\t\t\t\t\tthis.run(method, path, data).then(resolve).catch(reject);\n\t\t\t\t\t\t}, xRetryAfterHeader * 1000);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Append the response body to the body variable\n\t\t\t\tres.on(\"data\", (chunk) => (body += chunk));\n\n\t\t\t\t// End BigCommerce response execution\n\t\t\t\tres.on(\"end\", () => {\n\t\t\t\t\tif (statusCode >= 400 && statusCode <= 600) {\n\t\t\t\t\t\tconst errMessage = new Error(`BigCommerce API request failed with status code ${statusCode}.`);\n\t\t\t\t\t\terrMessage.statusCode = statusCode;\n\t\t\t\t\t\terrMessage.body = body;\n\n\t\t\t\t\t\treturn reject(errMessage);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Calling gzip method\n\t\t\t\t\treturn zlib.gzip(body, (err, data) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Calling gunzip method\n\t\t\t\t\t\tzlib.gunzip(data, (err, data) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn handleBodyResponse(res, data.toString(\"utf8\"), resolve, reject, this.logger);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdataString !== null\n\t\t\t\t? (() => {\n\t\t\t\t\t\t// Send log message when sending data\n\t\t\t\t\t\tthis.logger.info(\"Sending BigCommerce data...\");\n\n\t\t\t\t\t\t// Send log message when requesting data\n\t\t\t\t\t\tthis.logger.info(`${\"[\" + method.toUpperCase() + \"] \" + HTTPS_PROTOCOL + this.hostname + path}`);\n\n\t\t\t\t\t\treq.write(dataString);\n\n\t\t\t\t\t\tthis.logger.info(\"Sending complete.\");\n\t\t\t\t  })()\n\t\t\t\t: null;\n\n\t\t\t// Handle BigCommerce API request errors\n\t\t\treq.on(\"error\", (err) => reject(err));\n\n\t\t\t// End BigCommerce request execution\n\t\t\treq.end();\n\t\t});\n\t}\n}\n\nexport default Request;\n"],"mappings":"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"}