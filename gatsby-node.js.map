{"version":3,"sources":["src/gatsby-node.js"],"names":["handleCreateNodeFromData","item","nodeType","helpers","nodeMetadata","id","createNodeId","bigcommerce_id","parent","children","internal","type","content","contentDigest","createContentDigest","node","Object","assign","createNode","exports","onPreInit","logLevels","levels","info","colors","combine","format","timestamp","colorize","simple","logger","level","transports","Console","onCreateWebpackConfig","actions","setWebpackConfig","resolve","fallback","crypto","https","zlib","sourceNodes","pluginOptions","endpoints","clientId","secret","storeHash","accessToken","siteUrl","preview","logLevel","agent","responseType","headers","sanitizedSiteUrl","sanitizedLogLevel","sanitizeResponseType","error","debug","errMessage","BC","BigCommerce","keys","length","Promise","all","entries","map","nodeName","endpoint","get","then","res","resData","Array","isArray","data","datum","catch","err","Error","finally","IS_DEV","body","scope","is_active","destination","BIGCOMMERCE_WEBHOOK_API_ENDPOINT","post","server","req","micro","json","request","productId","newProduct","nodeToUpdate","end","listen","exitMessage","onCreateDevServer","app","use","target","secure"],"mappings":"AAAA;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,EAA6B;AAC7D,MAAMC,YAAY,8BACdH,IADc;AAEjBI,IAAAA,EAAE,EAAEF,OAAO,CAACG,YAAR,CAAwBJ,QAAxB,SAAoCD,IAAI,CAACI,EAAzC,CAFa;AAGjBE,IAAAA,cAAc,EAAEN,IAAI,CAACI,EAHJ;AAIjBG,IAAAA,MAAM,EAAE,IAJS;AAKjBC,IAAAA,QAAQ,EAAE,EALO;AAMjBC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAET,QADG;AAETU,MAAAA,OAAO,EAAE,mDAA+BX,IAA/B,CAFA;AAGTY,MAAAA,aAAa,EAAEV,OAAO,CAACW,mBAAR,CAA4Bb,IAA5B;AAHN;AANO,IAAlB;AAaA,MAAMc,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,IAAlB,EAAwBG,YAAxB,CAAb;AAEAD,EAAAA,OAAO,CAACe,UAAR,CAAmBH,IAAnB;AAEA,SAAOA,IAAP;AACA,CAnBD;;AA0BAI,OAAO,CAACC,SAAR,GAAoB,YAAM;AAEzB,MAAMC,SAAS,GAAG;AACjBC,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KADS;AAIjBC,IAAAA,MAAM,EAAE;AACPD,MAAAA,IAAI,EAAE;AADC;AAJS,GAAlB;AAUA,0BAAUF,SAAS,CAACG,MAApB;AAEA,MAAQC,OAAR,GAAiDC,eAAjD,CAAQD,OAAR;AAAA,MAAiBE,SAAjB,GAAiDD,eAAjD,CAAiBC,SAAjB;AAAA,MAA4BC,QAA5B,GAAiDF,eAAjD,CAA4BE,QAA5B;AAAA,MAAsCC,MAAtC,GAAiDH,eAAjD,CAAsCG,MAAtC;AAGA,MAAMC,MAAM,GAAG,2BAAa;AAC3BC,IAAAA,KAAK,EAAE,MADoB;AAE3BT,IAAAA,MAAM,EAAED,SAAS,CAACC,MAFS;AAG3BI,IAAAA,MAAM,EAAED,OAAO,CAACG,QAAQ,EAAT,EAAaC,MAAM,EAAnB,EAAuBF,SAAS,EAAhC,CAHY;AAI3BK,IAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AAJe,GAAb,CAAf;AAOAH,EAAAA,MAAM,CAACP,IAAP,CAAY,yDAAZ;AACA,CAzBD;;AAgCAJ,OAAO,CAACe,qBAAR;AAAA,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,OAAT,QAASA,OAAT;AAC/BA,YAAAA,OAAO,CAACC,gBAAR,CAAyB;AACxBC,cAAAA,OAAO,EAAE;AACRC,gBAAAA,QAAQ,EAAE;AAAEC,kBAAAA,MAAM,EAAE,KAAV;AAAiBC,kBAAAA,KAAK,EAAE,KAAxB;AAA+BC,kBAAAA,IAAI,EAAE;AAArC;AADF;AADe,aAAzB;;AAD+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAaAtB,OAAO,CAACuB,WAAR;AAAA,wEAAsB,yBAAuDC,aAAvD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASR,YAAAA,OAAT,SAASA,OAAT,EAAkB7B,YAAlB,SAAkBA,YAAlB,EAAgCQ,mBAAhC,SAAgCA,mBAAhC;AACbI,YAAAA,UADa,GACEiB,OADF,CACbjB,UADa;AAAA,oCAEqLyB,aAFrL,CAEbC,SAFa,EAEbA,SAFa,sCAED,IAFC,kDAEqLD,aAFrL,CAEKE,QAFL,EAEKA,QAFL,sCAEgB,IAFhB,kDAEqLF,aAFrL,CAEsBG,MAFtB,EAEsBA,MAFtB,sCAE+B,IAF/B,kDAEqLH,aAFrL,CAEqCI,SAFrC,EAEqCA,SAFrC,sCAEiD,IAFjD,kDAEqLJ,aAFrL,CAEuDK,WAFvD,EAEuDA,WAFvD,sCAEqE,IAFrE,kDAEqLL,aAFrL,CAE2EM,OAF3E,EAE2EA,OAF3E,sCAEqF,IAFrF,kDAEqLN,aAFrL,CAE2FO,OAF3F,EAE2FA,OAF3F,sCAEqG,KAFrG,kDAEqLP,aAFrL,CAE4GQ,QAF5G,EAE4GA,QAF5G,sCAEuH,MAFvH,iDAEqLR,aAFrL,CAE+HS,KAF/H,EAE+HA,KAF/H,qCAEuI,IAFvI,iDAEqLT,aAFrL,CAE6IU,YAF7I,EAE6IA,YAF7I,sCAE4J,MAF5J,kDAEqLV,aAFrL,CAEoKW,OAFpK,EAEoKA,OAFpK,sCAE8K,EAF9K;AAIfnD,YAAAA,OAJe,GAILa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkB,OAAlB,EAA2B;AAC1CrB,cAAAA,mBAAmB,EAAnBA,mBAD0C;AAE1CR,cAAAA,YAAY,EAAZA;AAF0C,aAA3B,CAJK;AASfiD,YAAAA,gBATe,GASI,sDAAkCN,OAAlC,CATJ;AAUfO,YAAAA,iBAVe,GAUK,sDAAkCL,QAAlC,CAVL;AAWfM,YAAAA,oBAXe,GAWQ,sDAAkCJ,YAAlC,CAXR;AAcfhC,YAAAA,SAde,GAcH;AACjBC,cAAAA,MAAM,EAAE;AACPoC,gBAAAA,KAAK,EAAE,CADA;AAEPC,gBAAAA,KAAK,EAAE,CAFA;AAGPpC,gBAAAA,IAAI,EAAE;AAHC,eADS;AAMjBC,cAAAA,MAAM,EAAE;AACPkC,gBAAAA,KAAK,EAAE,UADA;AAEPC,gBAAAA,KAAK,EAAE,WAFA;AAGPpC,gBAAAA,IAAI,EAAE;AAHC;AANS,aAdG;AA4BrB,oCAAUF,SAAS,CAACG,MAApB;AAEQC,YAAAA,OA9Ba,GA8B4BC,eA9B5B,CA8BbD,OA9Ba,EA8BJE,SA9BI,GA8B4BD,eA9B5B,CA8BJC,SA9BI,EA8BOC,QA9BP,GA8B4BF,eA9B5B,CA8BOE,QA9BP,EA8BiBC,MA9BjB,GA8B4BH,eA9B5B,CA8BiBG,MA9BjB;AAiCfC,YAAAA,MAjCe,GAiCN,2BAAa;AAC3BC,cAAAA,KAAK,EAAEyB,iBADoB;AAE3BlC,cAAAA,MAAM,EAAED,SAAS,CAACC,MAFS;AAG3BI,cAAAA,MAAM,EAAED,OAAO,CAACG,QAAQ,EAAT,EAAaC,MAAM,EAAnB,EAAuBF,SAAS,EAAhC,CAHY;AAI3BK,cAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AAJe,aAAb,CAjCM;AAyCjB2B,YAAAA,UAzCiB,GAyCJ,EAzCI;AA2CrB9B,YAAAA,MAAM,CAACP,IAAP,CAAY,wCAAZ;;AA3CqB,kBA6CjBqB,SAAS,KAAK,IAAd,IAAsBC,QAAQ,KAAK,IAAnC,IAA2CC,MAAM,KAAK,IAAtD,IAA8DC,SAAS,KAAK,IAA5E,IAAoFC,WAAW,KAAK,IA7CnF;AAAA;AAAA;AAAA;;AA+Cda,YAAAA,EA/Cc,GA+CT,IAAIC,oBAAJ,CAAgB;AAC1BjB,cAAAA,QAAQ,EAAEA,QADgB;AAE1BG,cAAAA,WAAW,EAAEA,WAFa;AAG1BF,cAAAA,MAAM,EAAEA,MAHkB;AAI1BC,cAAAA,SAAS,EAAEA,SAJe;AAK1BM,cAAAA,YAAY,EAAEI,oBALY;AAM1B3B,cAAAA,MAAM,EAAEA,MANkB;AAO1BsB,cAAAA,KAAK,EAAEA,KAPmB;AAQ1BE,cAAAA,OAAO,EAAEA;AARiB,aAAhB,CA/CS;;AAAA,kBA2DhBV,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAlC,IAA8C5B,MAAM,CAAC+C,IAAP,CAAYnB,SAAZ,EAAuBoB,MAAvB,GAAgC,CA3D9D;AAAA;AAAA;AAAA;;AA6DnBlC,YAAAA,MAAM,CAACP,IAAP,CAAY,sEAAZ;AACAO,YAAAA,MAAM,CAACP,IAAP,CAAY,6BAAZ;AA9DmB;AAAA,mBAgEb0C,OAAO,CAACC,GAAR,CACLlD,MAAM,CAACmD,OAAP,CAAevB,SAAf,EAA0BwB,GAA1B,CAA8B,iBAA0B;AAAA,kBAAxBC,QAAwB;AAAA,kBAAdC,QAAc;AACvD,qBAAOT,EAAE,CAACU,GAAH,CAAOD,QAAP,EAAiBE,IAAjB,CAAsB,UAACC,GAAD,EAAS;AAErC,oBAAMC,OAAO,GAAG,UAAUD,GAAV,IAAiBE,KAAK,CAACC,OAAN,CAAcH,GAAG,CAACI,IAAlB,CAAjB,GAA2CJ,GAAG,CAACI,IAA/C,GAAsDJ,GAAtE;AAGA,uBAAO,UAAUA,GAAV,IAAiBE,KAAK,CAACC,OAAN,CAAcH,GAAG,CAACI,IAAlB,CAAjB,GACJH,OAAO,CAACN,GAAR,CAAY,UAACU,KAAD;AAAA,yBAAW9E,wBAAwB,CAAC8E,KAAD,EAAQT,QAAR,EAAkBlE,OAAlB,CAAnC;AAAA,iBAAZ,CADI,GAEJwE,KAAK,CAACC,OAAN,CAAcH,GAAd,IACAA,GAAG,CAACL,GAAJ,CAAQ,UAACU,KAAD;AAAA,yBAAW9E,wBAAwB,CAAC8E,KAAD,EAAQT,QAAR,EAAkBlE,OAAlB,CAAnC;AAAA,iBAAR,CADA,GAEAH,wBAAwB,CAAC0E,OAAD,EAAUL,QAAV,EAAoBlE,OAApB,CAJ3B;AAKA,eAVM,CAAP;AAWA,aAZD,CADK,EAeJqE,IAfI,CAeC,YAAM;AAEX1C,cAAAA,MAAM,CAACP,IAAP,CAAY,mDAAZ;AACA,aAlBI,EAmBJwD,KAnBI,CAmBE,UAACC,GAAD,EAAS;AAEfpB,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,sDAA6DD,GAA7D,CAAb;AACA,aAtBI,EAuBJE,OAvBI,CAuBI;AAAA,qBAERpD,MAAM,CAACP,IAAP,CAAY,oCAAZ,CAFQ;AAAA,aAvBJ,CAhEa;;AAAA;AAAA;AAAA;;AAAA;AA4FnBqC,YAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,4EAAV,CAAb;;AA5FmB;AAAA,kBA+FhBE,qBAAUjC,OAAV,IAAqBK,gBAAgB,KAAK,IA/F1B;AAAA;AAAA;AAAA;;AAgGnBzB,YAAAA,MAAM,CAACP,IAAP,CAAY,qEAAZ;AAGM6D,YAAAA,IAnGa,GAmGN;AACZC,cAAAA,KAAK,EAAE,uBADK;AAEZC,cAAAA,SAAS,EAAE,IAFC;AAGZC,cAAAA,WAAW,EAAKhC,gBAAL;AAHC,aAnGM;AAAA;AAAA,mBAyGbM,EAAE,CAACU,GAAH,CAAOiB,2CAAP,EACJhB,IADI,CACC,UAACC,GAAD,EAAS;AACd,kBAAI,UAAUA,GAAV,IAAiBzD,MAAM,CAAC+C,IAAP,CAAYU,GAAG,CAACI,IAAhB,EAAsBb,MAAtB,GAA+B,CAApD,EAAuD;AACtDlC,gBAAAA,MAAM,CAACP,IAAP,CAAY,+EAAZ;AACAO,gBAAAA,MAAM,CAACP,IAAP,CAAY,0EAAZ;AACA,eAHD,MAGO;AACN,0EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACMsC,EAAE,CAAC4B,IAAH,CAAQD,2CAAR,EAA0CJ,IAA1C,EAAgDZ,IAAhD,CAAqD,UAACC,GAAD,EAAS;AACnE,gCAAI,UAAUA,GAAV,IAAiBzD,MAAM,CAAC+C,IAAP,CAAYU,GAAG,CAACI,IAAhB,EAAsBb,MAAtB,GAA+B,CAApD,EAAuD;AACtDlC,8BAAAA,MAAM,CAACP,IAAP,CAAY,sFAAZ;AACA;AACD,2BAJK,CADN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAD;AAMA;;AAED,kBAAMmE,MAAM,GAAG;AAAA,sFAAM,kBAAOC,GAAP,EAAYlB,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACEmB,eAAMC,IAAN,CAAWF,GAAX,CADF;;AAAA;AACdG,0BAAAA,OADc;AAEdC,0BAAAA,SAFc,GAEFD,OAAO,CAACjB,IAAR,CAAaxE,EAFX;AAAA;AAAA,iCAKKwD,EAAE,CAACU,GAAH,wBAA4BwB,SAA5B,CALL;;AAAA;AAKdC,0BAAAA,UALc;AAMdC,0BAAAA,YANc,GAMCD,UAAU,CAACnB,IANZ;;AAQpB,8BAAIoB,YAAY,CAAC5F,EAAjB,EAAqB;AACpBa,4BAAAA,UAAU,4BACN+E,YADM;AAET5F,8BAAAA,EAAE,EAAEC,YAAY,2BAAI2F,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAE5F,EAAlB,kFAFP;AAGTG,8BAAAA,MAAM,EAAE,IAHC;AAITC,8BAAAA,QAAQ,EAAE,EAJD;AAKTC,8BAAAA,QAAQ,EAAE;AACTC,gCAAAA,IAAI,mBADK;AAETE,gCAAAA,aAAa,EAAEC,mBAAmB,CAACmF,YAAD;AAFzB;AALD,+BAAV;AAWAnE,4BAAAA,MAAM,CAACP,IAAP,oBAA6B0E,YAAY,CAAC5F,EAA1C;AACA;;AAGDoE,0BAAAA,GAAG,CAACyB,GAAJ,CAAQ,IAAR;;AAxBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN;;AAAA;AAAA;AAAA;AAAA,kBAAf;AA2BAR,cAAAA,MAAM,CAACS,MAAP,CAAc,IAAd,EAAoBrE,MAAM,CAACP,IAAP,6DAApB;AACA,aA1CI,EA2CJwD,KA3CI,CA2CE,UAACC,GAAD,EAAS;AACfpB,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,6EAAoFD,GAApF,CAAb;AACA,aA7CI,CAzGa;;AAAA;AAAA;AAAA;;AAAA;AA0JpB,gBAAIpC,SAAS,IAAI,IAAjB,EAAuB;AACtBgB,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,sEAAV,CAAb;AACA;;AAGD,gBAAIpC,QAAQ,IAAI,IAAhB,EAAsB;AACrBe,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,oEAAV,CAAb;AACA;;AAGD,gBAAInC,MAAM,IAAI,IAAd,EAAoB;AACnBc,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,kEAAV,CAAb;AACA;;AAGD,gBAAIlC,SAAS,IAAI,IAAjB,EAAuB;AACtBa,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,qEAAV,CAAb;AACA;;AAGD,gBAAIjC,WAAW,IAAI,IAAnB,EAAyB;AACxBY,cAAAA,UAAU,GAAG,IAAIqB,KAAJ,CAAU,uEAAV,CAAb;AACA;;AAhLmB;AAAA,kBAmLjBrB,UAAU,KAAK,EAnLE;AAAA;AAAA;AAAA;;AAoLdwC,YAAAA,WApLc,GAoLA,kCApLA;AAsLpBtE,YAAAA,MAAM,CAAC4B,KAAP,MAAgB0C,WAAhB;AAtLoB,kBAwLdxC,UAxLc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;AAiMAzC,OAAO,CAACkF,iBAAR,GAA4B;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SAC3BA,GAAG,CAACC,GAAJ,CACC,eADD,EAEC,gDAAsB;AACrBC,IAAAA,MAAM,yBADe;AAErBC,IAAAA,MAAM,EAAE;AAFa,GAAtB,CAFD,CAD2B;AAAA,CAA5B","sourcesContent":["\"use strict\";\n\nimport { createProxyMiddleware } from \"http-proxy-middleware\";\nimport micro from \"micro\";\nimport { addColors, createLogger, format, transports } from \"winston\";\nimport { BIGCOMMERCE_WEBHOOK_API_ENDPOINT, IS_DEV } from \"./constants\";\nimport BigCommerce from \"./utils/bigcommerce\";\nimport { handleConversionObjectToString, handleConversionStringToLowercase } from \"./utils/convertValues\";\n\n/**\n * ============================================================================\n * Helper functions and constants\n * ============================================================================\n */\nconst handleCreateNodeFromData = (item, nodeType, helpers) => {\n\tconst nodeMetadata = {\n\t\t...item,\n\t\tid: helpers.createNodeId(`${nodeType}-${item.id}`),\n\t\tbigcommerce_id: item.id,\n\t\tparent: null,\n\t\tchildren: [],\n\t\tinternal: {\n\t\t\ttype: nodeType,\n\t\t\tcontent: handleConversionObjectToString(item),\n\t\t\tcontentDigest: helpers.createContentDigest(item)\n\t\t}\n\t};\n\n\tconst node = Object.assign({}, item, nodeMetadata);\n\n\thelpers.createNode(node);\n\n\treturn node;\n};\n\n/**\n * ============================================================================\n * Verify plugin loads and check for required plugin options\n * ============================================================================\n */\nexports.onPreInit = () => {\n\t// Add custom log levels\n\tconst logLevels = {\n\t\tlevels: {\n\t\t\tinfo: 1\n\t\t},\n\t\tcolors: {\n\t\t\tinfo: \"bold green\"\n\t\t}\n\t};\n\n\t// Add console colors\n\taddColors(logLevels.colors);\n\n\tconst { combine, timestamp, colorize, simple } = format;\n\n\t// Init `winston` logger\n\tconst logger = createLogger({\n\t\tlevel: \"info\",\n\t\tlevels: logLevels.levels,\n\t\tformat: combine(colorize(), simple(), timestamp()),\n\t\ttransports: [new transports.Console()]\n\t});\n\n\tlogger.info(\"`gatsby-source-bigcommerce` plugin loaded successfully.\");\n};\n\n/**\n * ============================================================================\n * Override Gatsby default Webpack configuration\n * ============================================================================\n */\nexports.onCreateWebpackConfig = async ({ actions }) => {\n\tactions.setWebpackConfig({\n\t\tresolve: {\n\t\t\tfallback: { crypto: false, https: false, zlib: false }\n\t\t}\n\t});\n};\n\n/**\n * ============================================================================\n * Source and cache nodes from the BigCommerce API\n * ============================================================================\n */\nexports.sourceNodes = async ({ actions, createNodeId, createContentDigest }, pluginOptions) => {\n\tconst { createNode } = actions;\n\tconst { endpoints = null, clientId = null, secret = null, storeHash = null, accessToken = null, siteUrl = null, preview = false, logLevel = \"info\", agent = null, responseType = \"json\", headers = {} } = pluginOptions;\n\n\tconst helpers = Object.assign({}, actions, {\n\t\tcreateContentDigest,\n\t\tcreateNodeId\n\t});\n\n\tconst sanitizedSiteUrl = handleConversionStringToLowercase(siteUrl);\n\tconst sanitizedLogLevel = handleConversionStringToLowercase(logLevel);\n\tconst sanitizeResponseType = handleConversionStringToLowercase(responseType);\n\n\t// Add custom log levels\n\tconst logLevels = {\n\t\tlevels: {\n\t\t\terror: 0,\n\t\t\tdebug: 1,\n\t\t\tinfo: 2\n\t\t},\n\t\tcolors: {\n\t\t\terror: \"bold red\",\n\t\t\tdebug: \"bold blue\",\n\t\t\tinfo: \"bold green\"\n\t\t}\n\t};\n\n\t// Add console colors\n\taddColors(logLevels.colors);\n\n\tconst { combine, timestamp, colorize, simple } = format;\n\n\t// Init `winston` logger\n\tconst logger = createLogger({\n\t\tlevel: sanitizedLogLevel,\n\t\tlevels: logLevels.levels,\n\t\tformat: combine(colorize(), simple(), timestamp()),\n\t\ttransports: [new transports.Console()]\n\t});\n\n\t// Custom variables\n\tlet errMessage = \"\";\n\n\tlogger.info(\"Checking BigCommerce plugin options...\");\n\n\tif (endpoints !== null && clientId !== null && secret !== null && storeHash !== null && accessToken !== null) {\n\t\t// Init new `BigCommerce` instance\n\t\tconst BC = new BigCommerce({\n\t\t\tclientId: clientId,\n\t\t\taccessToken: accessToken,\n\t\t\tsecret: secret,\n\t\t\tstoreHash: storeHash,\n\t\t\tresponseType: sanitizeResponseType,\n\t\t\tlogger: logger,\n\t\t\tagent: agent,\n\t\t\theaders: headers\n\t\t});\n\n\t\t// Handle fetching and creating nodes for a single or multiple endpoints\n\t\tif (endpoints && typeof endpoints === \"object\" && Object.keys(endpoints).length > 0) {\n\t\t\t// Send log message when fetching data\n\t\t\tlogger.info(\"Valid plugin options found. Proceeding with plugin initialization...\");\n\t\t\tlogger.info(\"Requesting endpoint data...\");\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.entries(endpoints).map(([nodeName, endpoint]) => {\n\t\t\t\t\treturn BC.get(endpoint).then((res) => {\n\t\t\t\t\t\t// If the data object is not on the response, it could be `v2` which returns an array as the root, so use that as a fallback\n\t\t\t\t\t\tconst resData = \"data\" in res && Array.isArray(res.data) ? res.data : res;\n\n\t\t\t\t\t\t// Handle generating nodes\n\t\t\t\t\t\treturn \"data\" in res && Array.isArray(res.data)\n\t\t\t\t\t\t\t? resData.map((datum) => handleCreateNodeFromData(datum, nodeName, helpers))\n\t\t\t\t\t\t\t: Array.isArray(res)\n\t\t\t\t\t\t\t? res.map((datum) => handleCreateNodeFromData(datum, nodeName, helpers))\n\t\t\t\t\t\t\t: handleCreateNodeFromData(resData, nodeName, helpers);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Send log message when all endpoints have been fetched\n\t\t\t\t\tlogger.info(\"All endpoint data have been fetched successfully.\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// Send log message when an error occurs\n\t\t\t\t\terrMessage = new Error(`An error occurred while fetching endpoint data. ${err}`);\n\t\t\t\t})\n\t\t\t\t.finally(() =>\n\t\t\t\t\t// Send log message when fetching data is complete\n\t\t\t\t\tlogger.info(\"Requesting endpoint data complete.\")\n\t\t\t\t);\n\t\t} else {\n\t\t\terrMessage = new Error(\"The `endpoints` object is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\tif (IS_DEV && preview && sanitizedSiteUrl !== null) {\n\t\t\tlogger.info(\"Preview mode enabled. Subscribing you to BigCommerce API webhook...\");\n\n\t\t\t// Make a `POST` request to the BigCommerce API to subscribe to its webhook\n\t\t\tconst body = {\n\t\t\t\tscope: \"store/product/updated\",\n\t\t\t\tis_active: true,\n\t\t\t\tdestination: `${sanitizedSiteUrl}/__BCPreview`\n\t\t\t};\n\n\t\t\tawait BC.get(BIGCOMMERCE_WEBHOOK_API_ENDPOINT)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (\"data\" in res && Object.keys(res.data).length > 0) {\n\t\t\t\t\t\tlogger.info(\"BigCommerce API webhook subscription already exists. Skipping subscription...\");\n\t\t\t\t\t\tlogger.info(\"BigCommerce API webhook subscription complete. Running preview server...\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(async () =>\n\t\t\t\t\t\t\tawait BC.post(BIGCOMMERCE_WEBHOOK_API_ENDPOINT, body).then((res) => {\n\t\t\t\t\t\t\t\tif (\"data\" in res && Object.keys(res.data).length > 0) {\n\t\t\t\t\t\t\t\t\tlogger.info(\"BigCommerce API webhook subscription created successfully. Running preview server...\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}))();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst server = micro(async (req, res) => {\n\t\t\t\t\t\tconst request = await micro.json(req);\n\t\t\t\t\t\tconst productId = request.data.id;\n\n\t\t\t\t\t\t// Webhooks don't send any data, so we need to make a request to the BigCommerce API to get the product data\n\t\t\t\t\t\tconst newProduct = await BC.get(`/catalog/products/${productId}`);\n\t\t\t\t\t\tconst nodeToUpdate = newProduct.data;\n\n\t\t\t\t\t\tif (nodeToUpdate.id) {\n\t\t\t\t\t\t\tcreateNode({\n\t\t\t\t\t\t\t\t...nodeToUpdate,\n\t\t\t\t\t\t\t\tid: createNodeId(`${nodeToUpdate?.id ?? `BigCommerceNode`}`),\n\t\t\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\ttype: `BigCommerceNode`,\n\t\t\t\t\t\t\t\t\tcontentDigest: createContentDigest(nodeToUpdate)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tlogger.info(`Updated node: ${nodeToUpdate.id}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Send a response back to the BigCommerce API\n\t\t\t\t\t\tres.end(\"ok\");\n\t\t\t\t\t});\n\n\t\t\t\t\tserver.listen(8033, logger.info(`Now listening to changes for live preview at /__BCPreview`));\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\terrMessage = new Error(`An error occurred while creating BigCommerce API webhook subscription. ${err}`);\n\t\t\t\t});\n\t\t}\n\t} else {\n\t\t// If `endpoints` is null, throw an error\n\t\tif (endpoints == null) {\n\t\t\terrMessage = new Error(\"The `endpoints` are required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `clientId` is null, throw an error\n\t\tif (clientId == null) {\n\t\t\terrMessage = new Error(\"The `clientId` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `secret` is null, throw an error\n\t\tif (secret == null) {\n\t\t\terrMessage = new Error(\"The `secret` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `storeHash` is null, throw an error\n\t\tif (storeHash == null) {\n\t\t\terrMessage = new Error(\"The `storeHash` is required to make any call to the BigCommerce API\");\n\t\t}\n\n\t\t// If `accessToken` is null, throw an error\n\t\tif (accessToken == null) {\n\t\t\terrMessage = new Error(\"The `accessToken` is required to make any call to the BigCommerce API\");\n\t\t}\n\t}\n\n\tif (errMessage !== \"\") {\n\t\tconst exitMessage = \"Plugin terminated with errors...\";\n\n\t\tlogger.error(`${exitMessage}`);\n\n\t\tthrow errMessage;\n\t}\n};\n\n/**\n * ============================================================================\n * Create a dev server for previewing the site when `preview` is enabled\n * ============================================================================\n */\nexports.onCreateDevServer = ({ app }) =>\n\tapp.use(\n\t\t\"/__BCPreview/\",\n\t\tcreateProxyMiddleware({\n\t\t\ttarget: `http://localhost:8033`,\n\t\t\tsecure: false\n\t\t})\n\t);\n"],"file":"gatsby-node.js"}